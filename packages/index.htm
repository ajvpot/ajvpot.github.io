<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Debian package map</title>
    <style>
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #map {
        height: 100%;
      }
	  #svgdiv {
		position: absolute;
		border: none;
	  }
	  #controls {
	  position:absolute; left:10px; top:50px; color:#fff}
    </style>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC5HAuuIl_sEl41fP_k8sg9ydqCXgeVo6o&signed_in=true"></script>
    <script>
      var overlay;
      SVGOverlay.prototype = new google.maps.OverlayView();

      function initMap() {
          var map = new google.maps.Map(document.getElementById('map'), {
              center: {
                  lat: 5,
                  lng: 5
              },
              zoom: 8,
              streetViewControl: false,
              mapTypeControlOptions: {
                  mapTypeIds: ['packages']
              },
			  backgroundColor: '#000',
          });

          var moonMapType = new google.maps.ImageMapType({
              getTileUrl: function(coord, zoom) {
                  return 'bg.png';
              },
              tileSize: new google.maps.Size(256, 256),
              maxZoom: 20,
              minZoom: 8,
              radius: 10,
              name: 'Debian Packages'
          });
          map.mapTypes.set('packages', moonMapType);
          map.setMapTypeId('packages');
          var bounds = new google.maps.LatLngBounds(
              new google.maps.LatLng(0, 0),
              new google.maps.LatLng(10, 10));

          overlay = new SVGOverlay(bounds, 'svgdiv', map);

      }

      /** @constructor */
      function SVGOverlay(bounds, divname, map) {
          this.bounds_ = bounds;
          this.map_ = map;
          this.divname_ = divname;
          this.div_ = null;

          // Explicitly call setMap on this overlay.
          this.setMap(map);
      }

      /**
       * onAdd is called when the map's panes are ready and the overlay has been
       * added to the map.
       */
      SVGOverlay.prototype.onAdd = function() {

          var div = document.getElementById(this.divname_);
          // initialize some js
          window.svgDoc = document.getElementById("packagemap").contentDocument;

          this.div_ = div;

          // Add the element to the "overlayLayer" pane.
          var panes = this.getPanes();
          panes.overlayLayer.appendChild(div);
      };

      SVGOverlay.prototype.draw = function() {

          // We use the south-west and north-east
          // coordinates of the overlay to peg it to the correct position and size.
          // To do this, we need to retrieve the projection from the overlay.
          var overlayProjection = this.getProjection();

          // Retrieve the south-west and north-east coordinates of this overlay
          // in LatLngs and convert them to pixel coordinates.
          // We'll use these coordinates to resize the div.
          var sw = overlayProjection.fromLatLngToDivPixel(this.bounds_.getSouthWest());
          var ne = overlayProjection.fromLatLngToDivPixel(this.bounds_.getNorthEast());

          // Resize the image's div to fit the indicated dimensions.
          var div = this.div_;
          div.style.left = sw.x + 'px';
          div.style.top = ne.y + 'px';
          div.style.width = (ne.x - sw.x) + 'px';
          div.style.height = (sw.y - ne.y) + 'px';
      };

      // The onRemove() method will be called automatically from the API if
      // we ever set the overlay's map property to 'null'.
      SVGOverlay.prototype.onRemove = function() {
          this.div_.parentNode.removeChild(this.div_);
          this.div_ = null;
      };

      google.maps.event.addDomListener(window, 'load', initMap);

      function updateSvg(url) {
          document.getElementById('packagemap').data = url;
      }
    </script>
  </head>
  <body>
    <div id="map"></div>
	<div id="svgdiv">
		<object data="bigscale.svg" id="packagemap" type="image/svg+xml" style="width:100%;height:100%;position:absolute;">
			<h1 style="color:#fff; text-align:center; width:100%">Your browser does not support SVG Graphics.</h1>
		</object>
	</div>
	<div id="controls">
	<button onclick="updateSvg('nolabels.svg');">no labels</button><br />
	<button onclick="updateSvg('Untitled.svg');">yes labels</button><br />
	<button onclick="updateSvg('bigscale.svg');">big scale</button><br />
	</div>
  </body>
</html>